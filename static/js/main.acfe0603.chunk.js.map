{"version":3,"sources":["components/LoginForm.jsx","components/MessageForm.jsx","components/MyMessage.jsx","components/OtherMessage.jsx","components/ChatFeed.jsx","App.js","index.js"],"names":["LoginForm","className","style","fontWeight","fontSize","align","MessageForm","props","useState","value","setValue","chatId","creds","handleSubmit","event","preventDefault","text","trim","length","sendMessage","onSubmit","placeholder","onChange","target","isTyping","htmlFor","PictureOutlined","type","multiple","id","display","files","SendOutlined","MyMessage","message","attachments","src","file","alt","float","marginRight","color","backgroundColor","OtherMessage","lastMessage","isFirstMessageByUser","sender","username","backgroundImage","avatar","marginLeft","ChatFeed","chats","activeChat","userName","messages","chat","title","keys","Object","map","key","index","lastMessageKey","isMyMessage","width","renderMessages","height","App","localStorage","getItem","projectID","userSecret","renderChatFeed","chatAppProps","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.acfe0603.chunk.js","sourcesContent":["import { useState } from 'react';\nimport axios from 'axios';\n\nconst LoginForm = () => {\n    // const [username, setUsername] = useState('');\n    // const [password, setPassword] = useState('');\n    // const [error, setError] = useState('');\n\n    // const handleSubmit = async (e) => {\n    //     e.preventDefault();\n\n    //     const authObject = { 'Project-ID': \"c9518d9a-b207-40a5-9f1e-c17c3e7856ae\", 'User-Name': username, 'User-Secret': password }\n\n    //     try {\n    //         await axios.get('https://api.chatengine.io/chats', { headers: authObject });       \n\n    //         localStorage.setItem('username', username);\n    //         localStorage.setItem('password', password);\n\n    //         window.location.reload();\n    //     } catch (error) {\n    //         setError('Incorrect username or password. Please try again.');\n    //     }\n\n    // }\n    \n    return (\n        <div className=\"wrapper\">\n            <div className=\"form\"> \n                <h1 className=\"title\" style={{fontWeight: \"800\", fontSize: \"7rem\"}}>SAD Chat</h1>\n                <div align=\"center\">\n                    <h1 className=\"title\">Log in to start chatting</h1>\n                </div>\n                {/* <form onSubmit={handleSubmit}>\n                    <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} className=\"input\" placeholder=\"Username\" required />\n                    <input type=\"text\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"input\" placeholder=\"Password\" required />\n                    <div align=\"center\">\n                        <button type=\"submit\" className=\"button\">\n                            <span>Start Chatting</span>\n                        </button>\n                    </div>\n                    <h2 className=\"error\">{error}</h2>\n                </form> */}\n            </div>\n        </div>\n    )\n\n}\n\nexport default LoginForm;","import { useState } from 'react';\nimport { sendMessage, isTyping } from 'react-chat-engine';\nimport { SendOutlined, PictureOutlined } from '@ant-design/icons'\n\nconst MessageForm = (props) => {\n    const [value, setValue] = useState('');\n    const { chatId, creds } = props;\n\n    const handleSubmit = (event) => {\n        event.preventDefault();  {/* default is to refresh browser */}\n\n        const text = value.trim();\n\n        if(text.length > 0) sendMessage(creds, chatId, { text });\n\n        setValue('');\n    }\n\n    const handleChange = (event) => {\n        setValue(event.target.value);\n\n        isTyping(props, chatId);\n    }\n\n    const handleUpload = (event) => {\n        sendMessage(creds, chatId, { files: event.target.files, text: '' });\n    }\n\n    return (\n        <form className=\"message-form\" onSubmit={handleSubmit}>\n            <input\n                className=\"message-input\"\n                placeholder=\"Send a message...\"\n                value={value}\n                onChange={handleChange}\n                onSubmit={handleSubmit}\n            />\n            <label htmlFor=\"upload-button\">\n                <span className=\"image-button\">\n                    <PictureOutlined className=\"picture-icon\" />\n                </span>\n            </label>\n            <input \n                type=\"file\"\n                multiple={false}\n                id=\"upload-button\"\n                style={{ display: 'none' }}\n                onChange={handleUpload}\n            />\n            <button type=\"submit\" className=\"send-button\">\n                <SendOutlined className=\"send-icon\"/>\n            </button>\n        </form>\n    );\n}\n\nexport default MessageForm;","const MyMessage = ({ message }) => {\n    if(message?.attachments?.length > 0) {\n        return (\n            <img\n                src={message.attachments[0].file}\n                alt=\"message-attachment\"\n                className=\"message-image\"\n                style={{ float: 'right' }}\n            />\n        )\n    }\n    return (\n        <div className=\"message\" style={{ float: 'right', marginRight: '10px', color: 'white', backgroundColor: '#9673DE' }}>\n            {message.text}\n        </div>\n    );\n}\n\nexport default MyMessage;","const OtherMessage = ({ lastMessage, message }) => {\n    const isFirstMessageByUser = !lastMessage || lastMessage.sender.username !== message.sender.username;\n    \n    return (\n        <div className=\"message-row\">\n            {isFirstMessageByUser && (\n                <div \n                    className=\"message-avatar\"\n                    style={{backgroundImage: `url(${message?.sender?.avatar})`}}\n                \n                />\n            )}\n            { message?.attachments?.length > 0 \n                ? (\n                    <img\n                        src={message.attachments[0].file}\n                        alt=\"message-attachment\"\n                        className=\"message-image\"\n                        style={{ marginLeft: isFirstMessageByUser ? '4px' : '48px' }}\n                    />\n                ) : (\n                    <div className=\"message\" style={{ float: 'left', backgroundColor: '#CABCDC', marginLeft: isFirstMessageByUser ? '4px' : '48px' }}>\n                        {message.text}\n                    </div>\n                )\n                \n            }\n        </div>\n    );\n}\n\nexport default OtherMessage;","import MessageForm from './MessageForm';\nimport MyMessage from './MyMessage';\nimport OtherMessage from './OtherMessage';\n\nconst ChatFeed = (props) => {\n    const { chats, activeChat, userName, messages } = props;\n\n    const chat = chats && chats[activeChat];\n\n\n    const renderMessages = () => {\n        const keys = Object.keys(messages);\n\n        return keys.map((key, index) => {\n            const message = messages[key];\n            const lastMessageKey = index === 0 ? null : keys[index - 1];\n            const isMyMessage = userName === message.sender.username;\n\n            return (\n                <div key={`msg_${index}`} style={{width: '100%' }}>\n                    <div className=\"message-block\">\n                        {\n                            isMyMessage\n                            ? <MyMessage message={message} />\n                            : <OtherMessage message={message} lastMessage={messages[lastMessageKey]} />\n                        }\n                        \n                    </div>\n                </div>\n            );\n        });\n    };\n\n\n    if(!chat) return 'Loading...';\n\n    return (\n        <div className=\"chat-feed\">\n            <div className=\"chat-title-container\">\n                <div className=\"chat-title\">{chat?.title}</div>\n            </div>\n            {renderMessages()}\n            <div style={{ height: '100px'}} />\n            <div className=\"message-form-container\">\n                <MessageForm {...props} chatId={activeChat} /> \n            </div>\n        </div>\n    );\n}\n\nexport default ChatFeed;","import { ChatEngine } from 'react-chat-engine';\n\nimport LoginForm from './components/LoginForm';\nimport ChatFeed from './components/ChatFeed';\n\nimport './Chat.css';\n\nconst App = () => {\n    if(!localStorage.getItem('username')) return <LoginForm />;\n\n    return  (\n        <ChatEngine \n            height=\"100vh\"\n            projectID=\"c9518d9a-b207-40a5-9f1e-c17c3e7856ae\"\n            userName={localStorage.getItem('username')}\n            userSecret={localStorage.getItem('password')}\n            renderChatFeed={(chatAppProps) => <ChatFeed { ...chatAppProps } />}\n        />\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n//ReactDOM.render(e(chat_container), document.querySelector('chat_container'));"],"sourceRoot":""}